#!/usr/local/bin/ruby
require 'fileutils'
require 'optparse'
require 'optparse/time'
require 'ostruct'
require 'pp'
require "mack_ruby_core_extensions"
require 'erb'

app = ARGV[0]
raise "You must specify a name for this gem!" if app.nil?

options = OpenStruct.new
options.version = "0.0.1"
options.author = (ENV["USERNAME"] || ENV["USER"])
options.force = false

opts = OptionParser.new do |opts|
  opts.banner = "Usage: gemstub [options]"
  
  opts.on("-v [initial version]") do |v|
    options.version = v
  end
  
  opts.on("-a [author name]") do |v|
    options.author = v
  end
  
  opts.on("-f [force]") do |v|
    options.force = true
  end
  
end

opts.parse!(ARGV)

# puts "options = #{options.inspect}"

app = app.downcase.gsub(" ", "_")

if options.force
  begin
    FileUtils.rm_rf app
  rescue Exception => e
    puts e
  end
end

puts "create directory: #{app}"
Dir.mkdir app

puts "create directory: #{app}/bin"
Dir.mkdir "#{app}/bin"

puts "create directory: #{app}/doc"
Dir.mkdir "#{app}/doc"

puts "create directory: #{app}/lib"
Dir.mkdir "#{app}/lib"

puts "create directory: #{app}/test"
Dir.mkdir "#{app}/test"

# Copy over templates:
erb_files = Dir.glob(File.join(File.dirname(__FILE__), "templates", "**/*.template"))

erb_files.each do |fl|
  res = ERB.new(File.open(fl).read).result(binding)
  n = fl.gsub(File.join(File.dirname(__FILE__), "templates"), app).gsub(".template", "")
  n.gsub!("app", app)
  File.open(n, "w") {|f| f.puts res}
  puts "Created: #{n}"
end